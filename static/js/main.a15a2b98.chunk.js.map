{"version":3,"sources":["component/Faces/Analog.js","component/useTime.js","component/Faces/FaceUI.js","component/Menu.js","component/Faces/Brightness.js","component/Dial.js","component/Main.js","App.js","reportWebVitals.js","index.js"],"names":["Analog","hourStyle","minuteStyle","secondStyle","faceBg","numbersRef","useRef","useEffect","i","div","document","createElement","textContent","classList","add","current","appendChild","numbers","className","style","backgroundImage","ref","useTime","useState","hour","setHour","minute","setMinute","second","setSecond","hourRotation","setHourRotation","minuteRotation","setMinuteRotation","secondRotation","setSecondRotation","updateTime","now","Date","currentHour","getHours","currentMinute","getMinutes","currentSecond","getSeconds","secondAngle","minuteAngle","hourAngle","toLocaleString","minimumIntegerDigits","intervalId","setInterval","clearInterval","FaceUI","setFaceBg","setDialStatus","setFacesShow","faceRef","selectFaceFun","e","target","src","console","log","img","process","addEventListener","faceLoad","Menu","setMenuShowStatus","setBrightnessShow","onClick","Brightness","type","Dial","facesFun","facesShow","dialStatus","menuShow","menuShowStatus","brightnessShow","setHourStyle","setMinuteStyle","setSecondStyle","transform","onDoubleClick","Main","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"sOAgCeA,EA7BA,SAAC,GAAqD,IAAnDC,EAAkD,EAAlDA,UAAWC,EAAuC,EAAvCA,YAAaC,EAA0B,EAA1BA,YAAaC,EAAa,EAAbA,OAC/CC,EAAaC,mBAYnB,OAHAC,qBAAU,YARM,WACd,IAAK,IAAIC,EAAI,EAAGA,GAAK,GAAIA,IAAK,CAC5B,IAAMC,EAAMC,SAASC,cAAc,OACnCF,EAAIG,YAAcJ,EAClBC,EAAII,UAAUC,IAAI,WAClBT,EAAWU,QAAQC,YAAYP,IAIjCQ,KACC,IAED,mCACE,qBAAKC,UAAU,YAAYC,MAAO,CAAEC,gBAAgB,OAAD,OAAShB,EAAT,MAAnD,SACE,qBAAKc,UAAU,aAAaG,IAAKhB,EAAjC,SACE,sBAAKa,UAAU,WAAf,UACE,qBAAKA,UAAU,YAAYC,MAAOlB,IAClC,qBAAKiB,UAAU,cAAcC,MAAOjB,IACpC,qBAAKgB,UAAU,cAAcC,MAAOhB,IACpC,qBAAKe,UAAU,0BCsBZI,EA5CC,WACd,MAAwBC,mBAAS,IAAjC,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAA4BF,mBAAS,IAArC,mBAAOG,EAAP,KAAeC,EAAf,KACA,EAA4BJ,mBAAS,IAArC,mBAAOK,EAAP,KAAeC,EAAf,KAEA,EAAwCN,mBAAS,GAAjD,mBAAOO,EAAP,KAAqBC,EAArB,KACA,EAA4CR,mBAAS,GAArD,mBAAOS,EAAP,KAAuBC,EAAvB,KACA,EAA4CV,mBAAS,GAArD,mBAAOW,EAAP,KAAuBC,EAAvB,KAkCA,OAhCA5B,qBAAU,WACR,IAAM6B,EAAa,WACjB,IAAMC,EAAM,IAAIC,KACVC,EAAcF,EAAIG,WAClBC,EAAgBJ,EAAIK,aACpBC,EAAgBN,EAAIO,aAGpBC,EAAeF,EAAgB,GAAM,IACrCG,GAAgBL,EAAgBE,EAAgB,IAAM,GAAM,IAC5DI,GAAeR,EAAc,GAAMO,EAAc,KAAO,GAAM,IAGpErB,EAAQc,EAAYS,eAAe,QAAS,CAAEC,qBAAsB,KACpEtB,EACEc,EAAcO,eAAe,QAAS,CAAEC,qBAAsB,KAEhEpB,EACEc,EAAcK,eAAe,QAAS,CAAEC,qBAAsB,KAEhElB,EAAgBgB,GAChBd,EAAkBa,GAClBX,EAAkBU,IAGdK,EAAaC,YAAYf,EAAY,KAI3C,OAFAA,IAEO,kBAAMgB,cAAcF,MAC1B,IAEI,CAAE1B,OAAME,SAAQE,SAAQE,eAAcE,iBAAgBE,mBCVhDmB,EA/BA,SAAC,GAAgD,IAA9CC,EAA6C,EAA7CA,UAAWC,EAAkC,EAAlCA,cAAeC,EAAmB,EAAnBA,aACpCC,EAAUnD,mBACVoD,EAAgB,SAACC,GACrBL,EAAUK,EAAEC,OAAOC,KACnBC,QAAQC,IAAIJ,EAAEC,OAAOC,KACrBN,GAAc,GACdC,GAAa,IAmBf,OAHAjD,qBAAU,YAbO,WACf,IAAK,IAAIC,EAAI,EAAGA,GAAK,GAAIA,IAAK,CAC5B,IAAMC,EAAMC,SAASC,cAAc,OAEnCF,EAAII,UAAUC,IAAI,SAClB,IAAMkD,EAAMtD,SAASC,cAAc,OACnCqD,EAAIH,IAAJ,UAAaI,uBAAb,yBAAoDzD,EAApD,QACAC,EAAIO,YAAYgD,GAChBP,EAAQ1C,QAAQC,YAAYP,GAC5BuD,EAAIE,iBAAiB,QAASR,IAKhCS,KACC,IAED,mCACE,qBAAKjD,UAAU,YAAYG,IAAKoC,OCKvBW,EAlCF,SAAC,GAKP,IAJLZ,EAII,EAJJA,aACAa,EAGI,EAHJA,kBACAC,EAEI,EAFJA,kBACAf,EACI,EADJA,cAEA,OACE,mCACE,qBAAKrC,UAAU,UAAf,SACE,+BACE,oBACEA,UAAU,WACVqD,QAAS,WACPf,GAAa,GACba,GAAkB,IAJtB,6BASA,oBACEnD,UAAU,WACVqD,QAAS,WACPD,GAAkB,GAClBD,GAAkB,GAClBd,GAAc,IALlB,gCCVKiB,EATI,WACjB,OACE,mCACE,qBAAKtD,UAAU,gBAAf,SACE,uBAAOA,UAAU,mBAAmBuD,KAAK,eCoElCC,EAlEF,SAAC,GAWP,IAVLC,EAUI,EAVJA,SACAC,EASI,EATJA,UACApB,EAQI,EARJA,aACAqB,EAOI,EAPJA,WACAtB,EAMI,EANJA,cACAuB,EAKI,EALJA,SACAC,EAII,EAJJA,eACAV,EAGI,EAHJA,kBACAW,EAEI,EAFJA,eACAV,EACI,EADJA,kBAEA,EAA4B/C,mBAAS,wBAArC,mBAAOnB,EAAP,KAAekD,EAAf,KAEA,EACEhC,IAD4BQ,GAA9B,EAAQN,KAAR,EAAcE,OAAd,EAAsBE,OAAtB,EAA8BE,cAAcE,EAA5C,EAA4CA,eAAgBE,EAA5D,EAA4DA,eAE5D,EAAkCX,mBAAS,IAA3C,mBAAOtB,EAAP,KAAkBgF,EAAlB,KACA,EAAsC1D,mBAAS,IAA/C,mBAAOrB,EAAP,KAAoBgF,EAApB,KACA,EAAsC3D,mBAAS,IAA/C,mBAAOpB,EAAP,KAAoBgF,EAApB,KAWA,OATA5E,qBAAU,WAER0E,EAAa,CAAEG,UAAU,UAAD,OAAYtD,EAAZ,UACxBoD,EAAe,CAAEE,UAAU,UAAD,OAAYpD,EAAZ,UAC1BmD,EAAe,CAAEC,UAAU,UAAD,OAAYlD,EAAZ,YACzB,CAACA,IAKF,mCACE,sBAAKhB,UAAU,UAAf,UACE,qBAAKA,UAAU,UAAf,SACE,sBAAKA,UAAU,aAAamE,cAAeV,EAA3C,UACGC,GACC,cAAC,EAAD,CACEtB,UAAWA,EACXC,cAAeA,EACfC,aAAcA,KAGhBoB,IAAcG,GAAkBF,IAAeE,GAC/C,cAAC,EAAD,CACE3E,OAAQA,EACRH,UAAWA,EACXC,YAAaA,EACbC,YAAaA,IAGhB4E,GACC,cAAC,EAAD,CACEvB,aAAcA,EACda,kBAAmBA,EACnBC,kBAAmBA,EACnBf,cAAeA,IAGlByB,GAAkB,cAAC,EAAD,SAGvB,qBAAK9D,UAAU,YAAYqD,QAASO,IACpC,qBAAK5D,UAAU,sBC9BRoE,EAjCF,WACX,MAAkC/D,oBAAS,GAA3C,mBAAOqD,EAAP,KAAkBpB,EAAlB,KACA,EAAoCjC,oBAAS,GAA7C,mBAAOsD,EAAP,KAAmBtB,EAAnB,KACA,EAA4ChC,oBAAS,GAArD,mBAAOwD,EAAP,KAAuBV,EAAvB,KACA,EAA4C9C,oBAAS,GAArD,mBAAOyD,EAAP,KAAuBV,EAAvB,KAYA,OACE,mCACE,cAAC,EAAD,CACEK,SAdW,WACfnB,GAAa,GACbD,GAAc,IAaVqB,UAAWA,EACXpB,aAAcA,EACdqB,WAAYA,EACZtB,cAAeA,EACfuB,SAfW,WACET,GAAjBU,GACAvB,GAAa,GACbc,GAAkB,GAClBR,QAAQC,IAAIc,GACZtB,GAAc,IAWVwB,eAAgBA,EAChBV,kBAAmBA,EACnBC,kBAAmBA,EACnBU,eAAgBA,OCrBTO,MARf,WACE,OACE,qBAAKrE,UAAU,MAAf,SACE,cAAC,EAAD,OCMSsE,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFzF,SAAS0F,eAAe,SAM1BZ,K","file":"static/js/main.a15a2b98.chunk.js","sourcesContent":["import { useEffect } from \"react\";\r\nimport { useRef } from \"react\";\r\n\r\nconst Analog = ({ hourStyle, minuteStyle, secondStyle, faceBg }) => {\r\n  const numbersRef = useRef();\r\n  const numbers = () => {\r\n    for (let i = 1; i <= 12; i++) {\r\n      const div = document.createElement(\"div\");\r\n      div.textContent = i;\r\n      div.classList.add(\"numbers\");\r\n      numbersRef.current.appendChild(div);\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    numbers();\r\n  }, []);\r\n  return (\r\n    <>\r\n      <div className=\"analogDiv\" style={{ backgroundImage: `url(${faceBg})` }}>\r\n        <div className=\"numbersDiv\" ref={numbersRef}>\r\n          <div className=\"handsDiv\">\r\n            <div className=\"hour-hand\" style={hourStyle}></div>\r\n            <div className=\"minute-hand\" style={minuteStyle}></div>\r\n            <div className=\"second-hand\" style={secondStyle}></div>\r\n            <div className=\"centerPoint\"></div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Analog;\r\n","import { useEffect, useState } from \"react\";\r\n\r\nconst useTime = () => {\r\n  const [hour, setHour] = useState(\"\");\r\n  const [minute, setMinute] = useState(\"\");\r\n  const [second, setSecond] = useState(\"\");\r\n\r\n  const [hourRotation, setHourRotation] = useState(0);\r\n  const [minuteRotation, setMinuteRotation] = useState(0);\r\n  const [secondRotation, setSecondRotation] = useState(0);\r\n\r\n  useEffect(() => {\r\n    const updateTime = () => {\r\n      const now = new Date();\r\n      const currentHour = now.getHours();\r\n      const currentMinute = now.getMinutes();\r\n      const currentSecond = now.getSeconds();\r\n\r\n      // Calculate angles for the hands\r\n      const secondAngle = (currentSecond / 60) * 360;\r\n      const minuteAngle = ((currentMinute + currentSecond / 60) / 60) * 360;\r\n      const hourAngle = (((currentHour % 12) + minuteAngle / 360) / 12) * 360;\r\n\r\n      // Update state to rotate hands\r\n      setHour(currentHour.toLocaleString(\"en-US\", { minimumIntegerDigits: 2 }));\r\n      setMinute(\r\n        currentMinute.toLocaleString(\"en-US\", { minimumIntegerDigits: 2 })\r\n      );\r\n      setSecond(\r\n        currentSecond.toLocaleString(\"en-US\", { minimumIntegerDigits: 2 })\r\n      );\r\n      setHourRotation(hourAngle);\r\n      setMinuteRotation(minuteAngle);\r\n      setSecondRotation(secondAngle);\r\n    };\r\n\r\n    const intervalId = setInterval(updateTime, 1000); // Update every second\r\n\r\n    updateTime(); // Initial update\r\n\r\n    return () => clearInterval(intervalId); // Cleanup on unmount\r\n  }, []);\r\n\r\n  return { hour, minute, second, hourRotation, minuteRotation, secondRotation };\r\n};\r\n\r\nexport default useTime;\r\n","import { useEffect, useRef } from \"react\";\r\n// import '../../images/faces/1.jpg'\r\nconst FaceUI = ({ setFaceBg, setDialStatus, setFacesShow }) => {\r\n  const faceRef = useRef();\r\n  const selectFaceFun = (e) => {\r\n    setFaceBg(e.target.src);\r\n    console.log(e.target.src);\r\n    setDialStatus(true);\r\n    setFacesShow(false);\r\n  };\r\n\r\n  const faceLoad = () => {\r\n    for (let i = 1; i <= 17; i++) {\r\n      const div = document.createElement(\"div\");\r\n\r\n      div.classList.add(\"faces\");\r\n      const img = document.createElement(\"img\");\r\n      img.src = `${process.env.PUBLIC_URL}/images/faces/${i}.jpg`;\r\n      div.appendChild(img);\r\n      faceRef.current.appendChild(div);\r\n      img.addEventListener(\"click\", selectFaceFun);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    faceLoad();\r\n  }, []);\r\n  return (\r\n    <>\r\n      <div className=\"faceUIDiv\" ref={faceRef}></div>\r\n    </>\r\n  );\r\n};\r\nexport default FaceUI;\r\n","const Menu = ({\r\n  setFacesShow,\r\n  setMenuShowStatus,\r\n  setBrightnessShow,\r\n  setDialStatus,\r\n}) => {\r\n  return (\r\n    <>\r\n      <div className=\"menuDiv\">\r\n        <ul>\r\n          <li\r\n            className=\"menuList\"\r\n            onClick={() => {\r\n              setFacesShow(true);\r\n              setMenuShowStatus(false);\r\n            }}\r\n          >\r\n            Dial Background\r\n          </li>\r\n          <li\r\n            className=\"menuList\"\r\n            onClick={() => {\r\n              setBrightnessShow(true);\r\n              setMenuShowStatus(false);\r\n              setDialStatus(false);\r\n            }}\r\n          >\r\n            Brightness\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\nexport default Menu;\r\n","const Brightness = () => {\r\n  return (\r\n    <>\r\n      <div className=\"brightnessDiv\">\r\n        <input className=\"brightnessSlider\" type=\"range\" />\r\n      </div>\r\n    </>\r\n  );\r\n};\r\nexport default Brightness;\r\n","import { useEffect, useRef, useState } from \"react\";\r\nimport Analog from \"./Faces/Analog\";\r\nimport useTime from \"./useTime\";\r\nimport FaceUI from \"./Faces/FaceUI\";\r\nimport Menu from \"./Menu\";\r\nimport Brightness from \"./Faces/Brightness\";\r\nconst Dial = ({\r\n  facesFun,\r\n  facesShow,\r\n  setFacesShow,\r\n  dialStatus,\r\n  setDialStatus,\r\n  menuShow,\r\n  menuShowStatus,\r\n  setMenuShowStatus,\r\n  brightnessShow,\r\n  setBrightnessShow,\r\n}) => {\r\n  const [faceBg, setFaceBg] = useState(\"./images/faces/1.jpg\");\r\n\r\n  const { hour, minute, second, hourRotation, minuteRotation, secondRotation } =\r\n    useTime();\r\n  const [hourStyle, setHourStyle] = useState({});\r\n  const [minuteStyle, setMinuteStyle] = useState({});\r\n  const [secondStyle, setSecondStyle] = useState({});\r\n\r\n  useEffect(() => {\r\n    // Update the styles for rotation\r\n    setHourStyle({ transform: `rotate(${hourRotation}deg)` });\r\n    setMinuteStyle({ transform: `rotate(${minuteRotation}deg)` });\r\n    setSecondStyle({ transform: `rotate(${secondRotation}deg)` });\r\n  }, [secondRotation]);\r\n  // console.log(facesShow);\r\n  // console.log(facesShow, dialStatus);\r\n  // console.log(hourRotation, minuteRotation, secondRotation);\r\n  return (\r\n    <>\r\n      <div className=\"mainDiv\">\r\n        <div className=\"dialDiv\">\r\n          <div className=\"dialScreen\" onDoubleClick={facesFun}>\r\n            {facesShow && (\r\n              <FaceUI\r\n                setFaceBg={setFaceBg}\r\n                setDialStatus={setDialStatus}\r\n                setFacesShow={setFacesShow}\r\n              />\r\n            )}\r\n            {!facesShow && !menuShowStatus && dialStatus && !menuShowStatus && (\r\n              <Analog\r\n                faceBg={faceBg}\r\n                hourStyle={hourStyle}\r\n                minuteStyle={minuteStyle}\r\n                secondStyle={secondStyle}\r\n              />\r\n            )}\r\n            {menuShowStatus && (\r\n              <Menu\r\n                setFacesShow={setFacesShow}\r\n                setMenuShowStatus={setMenuShowStatus}\r\n                setBrightnessShow={setBrightnessShow}\r\n                setDialStatus={setDialStatus}\r\n              />\r\n            )}\r\n            {brightnessShow && <Brightness />}\r\n          </div>\r\n        </div>\r\n        <div className=\"buttonDiv\" onClick={menuShow}></div>\r\n        <div className=\"chargingDiv\"></div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\nexport default Dial;\r\n","import { createContext, useState } from \"react\";\r\nimport Dial from \"./Dial\";\r\nimport useTime from \"./useTime\";\r\n\r\nconst Main = () => {\r\n  const [facesShow, setFacesShow] = useState(false);\r\n  const [dialStatus, setDialStatus] = useState(true);\r\n  const [menuShowStatus, setMenuShowStatus] = useState(false);\r\n  const [brightnessShow, setBrightnessShow] = useState(false);\r\n  const facesFun = () => {\r\n    setFacesShow(true);\r\n    setDialStatus(false);\r\n  };\r\n  const menuShow = () => {\r\n    menuShowStatus ? setMenuShowStatus(false) : setMenuShowStatus(true);\r\n    setFacesShow(false);\r\n    setBrightnessShow(false);\r\n    console.log(dialStatus);\r\n    setDialStatus(true);\r\n  };\r\n  return (\r\n    <>\r\n      <Dial\r\n        facesFun={facesFun}\r\n        facesShow={facesShow}\r\n        setFacesShow={setFacesShow}\r\n        dialStatus={dialStatus}\r\n        setDialStatus={setDialStatus}\r\n        menuShow={menuShow}\r\n        menuShowStatus={menuShowStatus}\r\n        setMenuShowStatus={setMenuShowStatus}\r\n        setBrightnessShow={setBrightnessShow}\r\n        brightnessShow={brightnessShow}\r\n      />\r\n    </>\r\n  );\r\n};\r\nexport default Main;\r\n","import \"./App.css\";\nimport Main from \"./component/Main\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Main />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}